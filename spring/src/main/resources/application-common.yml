# Actuator 설정
management:
  endpoints:
    web:
      exposure:
        include:
          - "health"
      base-path: "/system"
  endpoint:
    health:
      enabled: true
      show-details: always

# springdoc swagger
springdoc:
  api-docs:
    # JSON 제공 접속 path 설정
    path: /swagger/docs

  swagger-ui:
    # UI 제공 접속 path 설정
    path: /swagger/ui
    # Try it out 시 Request Duration 표시
    display-request-duration: true

  cache:
    # 캐시 비활성화 (로컬에서만 사용 권장)
    disabled: true

  # @ControllerAdvice 응답은 API 응답에 포함되지 않도록 설정
  override-with-generic-response: false

spring:
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 25MB

cloud:
  aws:
    s3:
      bucket: jjmeme-bucket-2
    region:
      static: us-east-1
      auto: false
    stack:
      auto: false
      # EC2에서 Spring Cloud 프로젝트를 실행시키면 기본으로 CloudFormation 구성을 시작하기 때문에 설정한 CloudFormation이 없으면 프로젝트 실행이 되지 않는다.
      # 해당 기능을 사용하지 않도록 false로 설정.
    credentials:
      access-key: AKIAW4A4KLWMCUN744GM
      secret-key: 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

logging:
  level:
    com:
      amazonaws:
        util:
          EC2MetadataUtils: error
#cloud:
#  aws:
#    s3:
#      bucket: ${AWS_S3_BUCKET}
#    region:
#      static: ${AWS_REGION}
#      auto: false
#    stack:
#      auto: false
#      # EC2에서 Spring Cloud 프로젝트를 실행시키면 기본으로 CloudFormation 구성을 시작하기 때문에 설정한 CloudFormation이 없으면 프로젝트 실행이 되지 않는다.
#      # 해당 기능을 사용하지 않도록 false로 설정.
#    credentials:
#      access-key: ${AWS_ACCESS_KEY}
#      secret-key: ${AWS_SECRET_KEY}